# This is a basic workflow to help you get started with Actions
name: my workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Test changed-files
    environment: slackbot  # secrets environment

    env:
      QUANTUM_CODE_ALERTS_WEBHOOK: ${{ secrets.QUANTUM_CODE_ALERTS_WEBHOOK }}
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23.1

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Run step when GrapqhQL Schema changes

#        if: contains(steps.changed-files.outputs.modified_files, 'src/com/company/resources/schema.graphqls')
        run: |
            echo "Graphql Schema for CDS has changed."
            value=$(<src/com/company/resources/schema.graphqls)
            jq -n -R -f < src/com/company/resources/schema.graphqls
            curl -X POST -H 'Content-type: application/json' --data '{"text":"'$( jq src/com/company/resources/schema.graphqls | tojson)'"}' ${{ env.QUANTUM_CODE_ALERTS_WEBHOOK }}
#            curl -X POST -H 'Content-type: application/json' --data '{"text":"'$(echo "$value")'"}' ${{ env.QUANTUM_CODE_ALERTS_WEBHOOK }}


